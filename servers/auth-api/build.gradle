buildscript {
    ext {
        restdocsApiSpecVersion = '0.18.4'
    }
}

plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
}

bootJar {
    enabled = true
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation project(":core")
    implementation project(":domain:rds-petdiarymembershipdb")
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', System.getenv('SPRING_PROFILES_ACTIVE')
    systemProperty 'user.timezone', 'UTC'
    systemProperty 'jasypt.encryptor.password', System.getenv('JASYPT_ENCRYPTOR_PASSWORD')
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

static def getOpenAPI3Server() {
    switch (System.getenv('SPRING_PROFILES_ACTIVE')) {
        case "prod":
            return "https://prod.example.com"
        case "dev":
            return "https://dev.example.com"
        default:
            return "http://localhost:8081"
    }
}

openapi3 {
    server = getOpenAPI3Server()
    title = 'PetDiary API Docs'
    description = 'PetDiary API 설명'
    version = '0.0.1-SNAPSHOT'
    format = 'yaml'
    outputDirectory = 'src/main/resources/static/swagger-ui'
    outputFileNamePrefix = 'openapi3'
}

//tasks.named("swagger") {
//    dependsOn 'openapi3'
//    doFirst {
//        def openapi3File = file("src/main/resources/static/swagger-ui/openapi3.json")
//    }
//
//}