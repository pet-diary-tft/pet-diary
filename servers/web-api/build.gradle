buildscript {
    ext {
        restdocsApiSpecVersion = '0.18.4'
    }
}

plugins {
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
}

bootJar {
    enabled = true
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation project(":core")
    implementation project(":domain:rds-petdiarydb")
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', System.getenv('SPRING_PROFILES_ACTIVE')
    systemProperty 'user.timezone', 'UTC'
    systemProperty 'jasypt.encryptor.password', System.getenv('JASYPT_ENCRYPTOR_PASSWORD')
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

static def getOpenAPI3Server() {
    switch (System.getenv('SPRING_PROFILES_ACTIVE')) {
        case "prod":
            return "https://prod.example.com"
        case "dev":
            return "https://api.kjb4494.site"
        default:
            return "http://localhost:8082"
    }
}

openapi3 {
    server = getOpenAPI3Server()
    title = 'PetDiary API Docs'
    description = 'PetDiary API 명세서입니다.<br/>' +
            'accessToken을 Authorize 버튼을 누른 뒤 넣어주시면 로그인 됩니다.'
    version = '0.0.1-SNAPSHOT'
    format = 'yaml'
    outputDirectory = 'src/main/resources/static/swagger-ui'
    outputFileNamePrefix = 'openapi3'
}

// 모든 API 호출 시 Authorize 헤더를 넣기 위한 추가 설정
tasks.register('swagger') {
    group = 'documentation'
    dependsOn 'clean', 'openapi3'
    doFirst {
        def openapi3File = file("src/main/resources/static/swagger-ui/openapi3.yaml")
        def securitySchemesContent =  "  securitySchemes:\n" +
                "    bearerAuth:\n" +
                "      type: http\n" +
                "      scheme: bearer\n" +
                "      bearerFormat: JWT\n" +
                "security:\n" +
                "  - bearerAuth: []"
        openapi3File.append securitySchemesContent
    }
}
